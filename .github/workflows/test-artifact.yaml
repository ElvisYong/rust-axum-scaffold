name: Test Artifact

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: test

    steps:
      # Check out your code
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Rust
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Build your Rust Axum API server
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      # Run your Rust Axum API server (assuming it's a binary named "my_server" and it runs in the background)
      - name: Run Axum server
        run: |
          target/release/rust-axum-scaffold &
          echo "Server started"
          sleep 10 # gives the server some time to start
        env:
          SERVER_ADDRESS: ${{env.SERVER_ADDRESS}}
          OPENAPI_SERVER_ADDRESS: ${{env.OPENAPI_SERVER_ADDRESS}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Use Schemathesis locally as CLI to run tests against your Rust Axum API server
      - name: Install Schemathesis 
        run: |
          python -m pip install --upgrade pip
          pip install schemathesis
        
      - name: Run Schemathesis
        run: |
          st run --checks all http://${{env.SERVER_ADDRESS}}/api-docs/openapi.json

      # Stop your Rust Axum API server (if needed)
      - name: Stop server
        if: always()
        run: pkill my_server || echo "Server already stopped."
